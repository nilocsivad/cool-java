package ${package_database};

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.SqlMapClientTemplate;
import org.springframework.stereotype.Repository;

import ${package_ref}.DataGridModel;

@Repository
public class DAOImpl<T> extends SqlMapClientTemplate implements IDAO<T> {

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##save(java.lang.String, java.lang.Object)
	 */
	@Override
	public Object save(String sqlMapID, T model) {
		return insert(sqlMapID, model);
	}

	@Override
	public Object saveMulti(String sqlMapID, Object obj) {
		return insert(sqlMapID, obj);
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##saveReturnInt(java.lang.String, java.lang.Object)
	 */
	@Override
	public Integer saveReturnInt(String sqlMapID, T model) {
		Object obj = this.save(sqlMapID, model);
		if (obj instanceof Integer)
			return (Integer) obj;
		return 0;
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##saveReturnLong(java.lang.String, java.lang.Object)
	 */
	@Override
	public Long saveReturnLong(String sqlMapID, T model) {
		Object obj = this.save(sqlMapID, model);
		if (obj instanceof Long)
			return (Long) obj;
		return 0L;
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##getOne(java.lang.String)
	 */
	@Override
	public T getOne(String sqlMapID) {
		return (T) queryForObject(sqlMapID);
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##getOne(java.lang.String, java.lang.Object)
	 */
	@Override
	public T getOne(String sqlMapID, Object obj) {
		return (T) queryForObject(sqlMapID, obj);
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##getList(java.lang.String)
	 */
	@Override
	public List<T> getList(String sqlMapID) {
		return queryForList(sqlMapID);
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##getList(java.lang.String, java.lang.Object)
	 */
	@Override
	public List<T> getList(String sqlMapID, Object obj) {
		return queryForList(sqlMapID, obj);
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##update(java.lang.String, java.lang.Object)
	 */
	@Override
	public int update(String sqlMapID, Object obj) {
		return update(sqlMapID, obj);
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##delete(java.lang.String, java.lang.Object)
	 */
	@Override
	public int delete(String sqlMapID, Object obj) {
		return delete(sqlMapID, obj);
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##getCountInt(java.lang.String, java.lang.Object)
	 */
	@Override
	public Integer getCountInt(String sqlMapID, Object param) {
		Object obj = queryForObject(sqlMapID, param);
		if (obj instanceof Integer)
			return (Integer) obj;
		return 0;
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##getCountLong(java.lang.String, java.lang.Object)
	 */
	@Override
	public Long getCountLong(String sqlMapID, Object param) {
		Object obj = queryForObject(sqlMapID, param);
		if (obj instanceof Long)
			return (Long) obj;
		return 0L;
	}

	/*
	 * (non-Javadoc)
	 * @see ${package_database}.IDAO##getPageListForUI(java.lang.String, java.lang.String, org.cool.java.mysql.export.ibatis.DataGridModel, java.lang.Object)
	 */
	@Override
	public Map<String, Object> getPageListForUI(String sqlMapSelectID, String sqlMapCountID, DataGridModel dgm, T model) {
		Map<String, Object> result = new HashMap<String, Object>(2);
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("model", model);
		map.put("begin", (dgm.getPage() - 1) * dgm.getRows());
		map.put("end", dgm.getRows());
		map.put("sort", dgm.getSort());
		map.put("order", dgm.getOrder());
		Object sum = queryForObject(sqlMapCountID, map);
		if(sum == null){
			result.put("total", 0);
			result.put("rows", new ArrayList());
			return result;
		}
		long totalsum = (long) sum;
		result.put("total", totalsum);
		result.put("rows", queryForList(sqlMapSelectID, map));
		return result;
	}

}
